#Q: Given an integer array, find a subarray with sum closest to zero. Return the indexes of the first number and last number.

def subarraySumClosest(self, nums):
    prefix_sum = [(0, -1)]
    for i, num in enumerate(nums):
        prefix_sum.append((prefix_sum[-1][0] + nums[i], i))
    prefix_sum.sort()
    closest = sys.maxsize
    result = []
    for i in range(1, len(prefix_sum)):
        if closest > prefix_sum[i][0] - prefix_sum[i-1][0]:
            closest = prefix_sum[i][0] - prefix_sum[i-1][0]
            left = min(prefix_sum[i][1], prefix_sum[i-1][1]) + 1
            right = max(prefix_sum[i][1], prefix_sum[i-1][1])
            result = [left, right]
    return result
