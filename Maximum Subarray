#Q: Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.

class Solution(object):
    def maxSubArray(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        if not nums or len(nums) == 0:
            return None
        if len(nums) == 1:
            return nums[0]
        globmax = nums[0]
        minsum = 0
        sum = 0
        for i in range(len(nums)):
            sum = sum + nums[i]
            globmax = max(sum - minsum, globmax)
            minsum = min(sum, minsum)
        return globmax
