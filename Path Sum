#Q: Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that 
# adding up all the values along the path equals the given sum.


# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def hasPathSum(self, root, sum):
        """
        :type root: TreeNode
        :type sum: int
        :rtype: bool
        """
        ifexist = self.helper(root, sum)
        return ifexist
    def helper(self, root, target):
        if root is None:
            return False
        target = target - root.val
        if target == 0 and not root.left and not root.right:
            return True
        left_exist = self.helper(root.left, target)
        right_exist = self.helper(root.right, target)
        if left_exist or right_exist:
            return True
        return False
