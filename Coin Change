#Q:You are given coins of different denominations and a total amount of money amount. 
#Write a function to compute the fewest number of coins that you need to make up that amount. 
#If that amount of money cannot be made up by any combination of the coins, return -1.

class Solution(object):
    def coinChange(self, coins, amount):
        """
        :type coins: List[int]
        :type amount: int
        :rtype: int
        """
        n = len(coins)
        f = [float('Inf') for i in range(amount + 1)]
        f[0] = 0
        for i in range(1, amount + 1):
            for j in range(n):
                if i >= coins[j]:# and f[i - coins[j]] != float('Inf'):
                    f[i] = min(f[i], f[i - coins[j]] + 1)
        if f[amount] == float('Inf'):
            return -1
        else:
            return f[amount]
