#Q:Given a binary tree, return all root-to-leaf paths

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def binaryTreePaths(self, root):
        """
        :type root: TreeNode
        :rtype: List[str]
        """
        if root is None:
            return []
        result = []
        self.findpath(root, result, [])
        return result
    def findpath(self, node, result, temp):
        temp.append(node.val)
        if node.left is None and node.right is None:
            result.append("->".join(temp))
            temp.pop()
            return
        if node.left:
            self.findpath(node.left)
        if node.right:
            self.findpath(node.right)
        temp.pop()
